#include <bits/stdc++.h>
using namespace std;

#define PI (3.141592653589)
#define M 1000000007
#define pb push_back
#define f first
#define s second
#define rep(i,j) for(int i = 0; i<j; i++)
#define rrep(i,j) for(int i = j; i>=0; i--)
#define all(x) x.begin(), x.end()
#define out(x) cout << x << endl;
#define YES cout<<"YES"<<endl
#define NO cout<<"NO"<<endl
#define pm cout<<"-1"<<endl

//Typedef
typedef long long ll;
typedef pair<int, int> pi;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef map<int,int> mii;

// Debug Overloads
#ifdef localenv
#define debug(x) _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(double t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.f); cerr << ","; _print(p.s); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr <<"]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr <<"]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << "";} cerr << "]";}

// Operator Overloads
template<typename T> // cin >> vector<T>
istream& operator>>(istream &istream, vector<T> &v){for (auto &it : v)cin >> it;return istream;}
template<typename T> // cout << vector<T>
ostream& operator<<(ostream &ostream, const vector<T> &c) { for (auto &it : c) cout << it << " ";return ostream; }

bool allChars(int arr[])
{
  for (int i = 0;i<26;i++)
  {
    if (arr[i] < 1) return false;
  }
  return true;
}

void solve()
{
  ll n; cin >> n;
  string str; cin >> str;
  if(n < 26) NO;
  else
  {
    int freq[26] = {0};
    for (int i = 0;i<n;i++)
    {
      if (str[i] == 'a' || str[i] == 'A') freq[0]++;
      else if (str[i] == 'b' || str[i] == 'B') freq[1]++;
      else if (str[i] == 'c' || str[i] == 'C') freq[2]++;
      else if (str[i] == 'd' || str[i] == 'D') freq[3]++;
      else if (str[i] == 'e' || str[i] == 'E') freq[4]++;
      else if (str[i] == 'f' || str[i] == 'F') freq[5]++;
      else if (str[i] == 'g' || str[i] == 'G') freq[6]++;
      else if (str[i] == 'h' || str[i] == 'H') freq[7]++;
      else if (str[i] == 'i' || str[i] == 'I') freq[8]++;
      else if (str[i] == 'j' || str[i] == 'J') freq[9]++;
      else if (str[i] == 'k' || str[i] == 'K') freq[10]++;
      else if (str[i] == 'l' || str[i] == 'L') freq[11]++;
      else if (str[i] == 'm' || str[i] == 'M') freq[12]++;
      else if (str[i] == 'n' || str[i] == 'N') freq[13]++;
      else if (str[i] == 'o' || str[i] == 'O') freq[14]++;
      else if (str[i] == 'p' || str[i] == 'P') freq[15]++;
      else if (str[i] == 'q' || str[i] == 'Q') freq[16]++;
      else if (str[i] == 'r' || str[i] == 'R') freq[17]++;
      else if (str[i] == 's' || str[i] == 'S') freq[18]++;
      else if (str[i] == 't' || str[i] == 'T') freq[19]++;
      else if (str[i] == 'u' || str[i] == 'U') freq[20]++;
      else if (str[i] == 'v' || str[i] == 'V') freq[21]++;
      else if (str[i] == 'w' || str[i] == 'W') freq[22]++;
      else if (str[i] == 'x' || str[i] == 'X') freq[23]++;
      else if (str[i] == 'y' || str[i] == 'Y') freq[24]++;
      else if (str[i] == 'z' || str[i] == 'Z') freq[25]++;
    }
    if (allChars(freq)) YES;
    else NO;
  }
}

int32_t main()
{
  int tc = 1;
  // cin>>tc;
  while(tc--)
  {
    solve();
  }
  return 0;
}
